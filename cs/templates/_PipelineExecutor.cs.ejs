using System.Threading.Tasks;

namespace MyNamespace
{
    public class <%= name %>
    {
        public static readonly <%= name %> Instance = new <%= name %>(<%= pipelineClassName %>.Instance);

        public <%= pipelineClassName %> Pipeline { get; }

        public <%= name %>(<%= pipelineClassName %> pipeline)
        {
            this.Pipeline = pipeline;
        }

        public virtual async Task Execute(<%= argumentsClassName %> arguments)
        {
            var processors = this.Pipeline.GetProcessors();
            
            foreach (var processor in processors)
            {
                await processor.Execute(arguments);
            }
        }
    }
}