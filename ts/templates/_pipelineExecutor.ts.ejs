import { <%= argumentsClassName %> } from './<%= argumentsFileName %>'
import { <%= pipelineClassName %> } from './<%= pipelineFileName %>'

export class <%= name %> {
    public static Instance: <%= name %> = new <%= name %>(<%= pipelineClassName %>.Instance);

    constructor(public pipeline: <%= pipelineClassName %>) {
    }

    async execute(args: <%= argumentsClassName %>) : Promise<void> {
        let processors = this.pipeline.GetProcessors();

        if (!processors || processors.length === 0) {
            return;
        }

        for (let index = 0; index < processors.length; index++) {
            const processor = processors[index];
            await processor.Execute(args);
        }
    }
}